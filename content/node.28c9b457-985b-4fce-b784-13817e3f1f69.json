{
    "uuid": [
        {
            "value": "28c9b457-985b-4fce-b784-13817e3f1f69"
        }
    ],
    "langcode": [
        {
            "value": "en"
        }
    ],
    "type": [
        {
            "target_id": "blog",
            "target_type": "node_type",
            "target_uuid": "a90c00e7-fd49-42a6-8cdb-e99ec16f7742"
        }
    ],
    "revision_timestamp": [
        {
            "value": "2020-01-27T16:05:02+00:00",
            "format": "Y-m-d\\TH:i:sP"
        }
    ],
    "revision_uid": [
        {
            "target_type": "user",
            "target_uuid": "30bffdc0-96b3-4656-9078-3f8113359c60"
        }
    ],
    "revision_log": [],
    "status": [
        {
            "value": true
        }
    ],
    "uid": [
        {
            "target_type": "user",
            "target_uuid": "30bffdc0-96b3-4656-9078-3f8113359c60"
        }
    ],
    "title": [
        {
            "value": "Introducing Twig Components"
        }
    ],
    "created": [
        {
            "value": "2018-04-09T16:03:24+00:00",
            "format": "Y-m-d\\TH:i:sP"
        }
    ],
    "changed": [
        {
            "value": "2020-01-27T16:05:02+00:00",
            "format": "Y-m-d\\TH:i:sP"
        }
    ],
    "promote": [
        {
            "value": true
        }
    ],
    "sticky": [
        {
            "value": false
        }
    ],
    "default_langcode": [
        {
            "value": true
        }
    ],
    "revision_translation_affected": [
        {
            "value": true
        }
    ],
    "path": [
        {
            "alias": "",
            "pid": null,
            "langcode": "en"
        }
    ],
    "body": [
        {
            "value": "<main aria-label=\"Content\">\r\n<article itemscope=\"\" itemtype=\"http:\/\/schema.org\/BlogPosting\">\r\n<p>Last week I published the&nbsp;<a href=\"https:\/\/www.drupal.org\/project\/twig_components\">Twig Components Drupal module<\/a>&nbsp;- the latest in a series of projects aiming to combine Twig, Web Components, and PHP. I wanted to write about why I\u2019m doing this work, and why developers should care.<\/p>\r\n\r\n<h2 id=\"web-components---a-time-and-place\">Web Components - a Time and Place<\/h2>\r\n\r\n<p><a href=\"https:\/\/github.com\/w3c\/webcomponents\">Web Components<\/a>&nbsp;are a series of new W3C standards that allows Javascript to define custom HTML tags. These custom tags, known as&nbsp;<a href=\"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Web_Components\/Using_custom_elements\">custom elements<\/a>, differ from the tags that web frameworks provide because no runtime is required to use them - the browser is aware of all custom elements and knows how to use them.<\/p>\r\n\r\n<p>It\u2019s important to note here that using web standards and \u201cvanilla\u201d Javascript has no inherit technical value, it\u2019s just really exciting to be a part of something that\u2019s new and framework agnostic. Betting on Web Components is betting on web standards, not&nbsp;<em>against<\/em>&nbsp;any other frontend tool.<\/p>\r\n\r\n<p>That aside aside, the coolest part of custom elements to me is that they move a lot&nbsp;<em>back<\/em>&nbsp;to the DOM. The API for custom elements is HTML, you use them the same way you would use any other tag. Asking \u201cWhy custom elements\u201d is like asking \u201cWhy &lt;input&gt;?\u201d. If a custom element is useful, use it!<\/p>\r\n\r\n<p>In my view, Web Components are a great fit for template-heavy CMSes. Frontend developers are probably already writing HTML templates\/CSS\/JS, so if anything Web Components are just a way to codify what you already do. This is not a revolutionary technology, but I think it\u2019s something that bridges the very real gap between traditional CMSes and fully-fledged frontend frameworks.<\/p>\r\n\r\n<p>I would also say that, at least out of the box, Web Components are not as ambitious as frontend frameworks, and do not aim to solve the same problems. Web Components don\u2019t come with a solution for routing, state, or context, but what they do solve is componentizing HTML\/CSS\/JS in something that acts like any other native element. It\u2019s worth nothing that people&nbsp;<em>have<\/em>&nbsp;built entire web applications with Web Components, but I don\u2019t think that\u2019s the&nbsp;<a href=\"https:\/\/en.wikipedia.org\/wiki\/Pareto_principle\">80% use case<\/a>.<\/p>\r\n\r\n<h2 id=\"discovering-universal-twig\">Discovering Universal Twig<\/h2>\r\n\r\n<p>If you\u2019re a Symfony or Drupal 8 developer, you probably have seen or used Twig, a PHP template engine designed to be fast and flexible. I like writing Twig, and from what I can tell most of the Drupal community does as well. Some like it so much that they\u2019ve created massive Atomic Design based themes that already include dozens of re-usable, componentized Twig templates.<\/p>\r\n\r\n<p>I knew going into Web Components that I wanted to use Twig on the backend and the frontend - both for my own preference and to ease PHP developers into this uncharted territory.<\/p>\r\n\r\n<p>Luckily for me, some generous folks had already ported Twig to Javascript with the appropriately named&nbsp;<a href=\"https:\/\/github.com\/twigjs\/twig.js\">Twig.js<\/a>&nbsp;project. This opened the door for me to write&nbsp;<a href=\"https:\/\/www.npmjs.com\/package\/twig-components\">Twig Components, an NPM project<\/a>&nbsp;that provided a base vanilla Web Component that knew how to handle Twig. I later created&nbsp;<a href=\"https:\/\/github.com\/mortenson\/twig-components-example\">an example project<\/a>&nbsp;and a&nbsp;<a href=\"https:\/\/github.com\/mortenson\/generator-twig-components-webpack\">project template<\/a>&nbsp;that included polyfills, test coverage, template pre-compiling and ES5 transpiler.<\/p>\r\n\r\n<p>All the Javascript was coming into place, but I realized somewhere down the line that I could feasibly pre-compile these Web Components server-side with PHP. Normally for something like this you would use&nbsp;<a href=\"https:\/\/github.com\/phpv8\/v8js\">V8JS<\/a>, which allows you to execute Javascript in PHP, but most hosting providers don\u2019t have this extension installed and asking users to compile an extension to use Twig Components seemed like a bad developer experience. In practice I\u2019ve also noticed that because V8JS isn\u2019t exactly like the Node environment, it can be unruly to get things running.<\/p>\r\n\r\n<p>So I set out to server-side render Web Components in PHP, and it turned out pretty well. My Composer project,&nbsp;<a href=\"https:\/\/github.com\/mortenson\/twig-components-ssr\">mortenson\/twig-components-ssr<\/a>, now supports nested components, &lt;style&gt; tags in templates, and the &lt;slot&gt; element. At this point, I felt like I could push forward on a Drupal integration.<\/p>\r\n\r\n<h2 id=\"the-end-of-the-funnel\">The end of the funnel<\/h2>\r\n\r\n<p>Making Twig Components work in Drupal was always the end goal, and I knew that for the integration to work I had to make a module that provided more value than just getting the right Javascript on the page.<\/p>\r\n\r\n<p>The first thing I added to the module is a new plugin annotation for components, which could be used in a class or a YML file. Using the plugin system was a little tough, but worth it since it gave me discoverability, cacheability, and extensibility. I based a ton of the code and tests on the Layout component and Layout Discovery module from Drupal core, so it may look eerily familiar.<\/p>\r\n\r\n<p>Once plugins were in place, I started working on an event subscriber that responds to every HTML response in Drupal, pre-renders all components, and ensures that only the minimally required libraries are present on the page. You can&nbsp;<a href=\"https:\/\/www.drupal.org\/docs\/8\/modules\/twig-components\/the-twig-component-render-pipeline\">read the documentation for the renderer<\/a>&nbsp;for more details.<\/p>\r\n\r\n<p>With a way for modules and themes to provide Twig Components, and assurance that server-side rendering and dynamic library addition works, I released the module on Drupal.org.<\/p>\r\n\r\n<p>At this point, I just need users to create&nbsp;<em>real<\/em>&nbsp;things with it before I know what direction to take with the module. If anyone is interested in diving in and trying this out, you can&nbsp;<a href=\"https:\/\/www.drupal.org\/docs\/8\/modules\/twig-components\/building-your-first-twig-component\">jump into the documentation on Drupal.org here<\/a>.<\/p>\r\n\r\n<p>Enjoy!<\/p>\r\n<\/article>\r\n<\/main>\r\n",
            "format": "full_html",
            "summary": ""
        }
    ],
    "field_tags": [
        {
            "target_type": "taxonomy_term",
            "target_uuid": "d9871794-7262-415a-a18e-fc784794b1c9"
        },
        {
            "target_type": "taxonomy_term",
            "target_uuid": "209756da-e363-41cc-b28f-34f4b20160bd"
        },
        {
            "target_type": "taxonomy_term",
            "target_uuid": "23b07c20-ef0f-49f3-8dba-f3b1daa50c5e"
        }
    ]
}